<?xml version="1.0" encoding="UTF-8"?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd" https="true">
    <meta>
        <author>IKER AZPEITIA</author>
        <description>RDFIZER FOR Amazon</description>
        <documentationURL><!-- url for API documentation --></documentationURL>
        <apiKeyURL><!-- url for getting an API key if needed --></apiKeyURL>
        <sampleQuery></sampleQuery>    
    </meta>    
    <execute><!--GLOBAL FUNCTIONS-->
<![CDATA[  y.include('https://raw.githubusercontent.com/onekin/owc/master/iker/ld.js'); // LD.js.       
default xml namespace = "http://webservices.amazon.com/AWSECommerceService/2011-08-01"; //E4X namespace
function encodeOffer(id){
  var begin = id.indexOf("%");
  if (begin> -1){id=id.substring(0,begin);}
  return id;}	
function encodeSubjectUri(subject){return "http://dbpedia.org/resource/"+ encodeURIComponent(subject);}
i= 1;
function nextReviewURI(){
	var reviewURI = URI.replace("/book/","/review/")+"/num/"+i;
	i++;
	return reviewURI;}
sourceCount=0;
function isTheReviewSourceNum(source){
	var number = URI.substring(URI.lastIndexOf("/")).replace(/\//g,'');
	sourceCount++;
	if (number==sourceCount){return source;}}
contentCount=0;
function isTheReviewContentNum(content){
	var number = URI.substring(URI.lastIndexOf("/")).replace(/\//g,'');
	contentCount++;
	if (number==contentCount){return encodeURIComponent(content);}}
function encodeAmazonAuthorURI(author){	return "http://rdf.onekin.org/amazon.ecs.rdf/person/"+ encodeURIComponent(author);}
function isOurPerson(author){
	if (encodeAmazonAuthorURI(author) == URI){return URI;}
	else{return null;}}
function encodeDBLPAuthorIsOurPerson(author){
	if (isOurPerson(author) != null){return "http://rdf.onekin.org/dblp.rdf/person/"+ encodeURIComponent(author);}
	else{return null;}}
function encodeISBN(isbn){return "urn:ISBN:"+ isbn;}
function encodeOfferURI(id){return URI.replace("/book/","/offer/")+"/offerid/"+encodeOffer(id);}
function encodeAmazonBookURI(id) { return "http://rdf.onekin.org/amazon.ecs.rdf/book/isbn/"+id;}
function encodeGoogleBookURI(id){ return "http://rdf.onekin.org/google.books.rdf/book/isbn/"+id;}
function encodeAmazonBookURIASIN(id){ return "http://rdf.onekin.org/amazon.ecs.rdf/book/isbn/"+id;} ]]>
    </execute> 
    <bindings>
         <select itemPath="results.RDF" produces="XML"> <!--LOWERIGN Book--> 
              <inputs>
                <key id="URI" type="xs:string" paramType="variable" required="true"/>
                <key id="isbn" type="xs:string" paramType="variable" required="true"/>
              </inputs>
            <execute><![CDATA[
LD.rdfize("select * from amazon.ecs where ItemId=@isbn and ResponseGroup='Large'");]]>
             </execute>
        </select>                        
        <function name="book" ><!--LIFTING Book-->
           <inputs>
               <pipe id="tuple" paramType="variable" type="xs:string"/> 
               <key id="URI" type="xs:string" paramType="variable" required="true"/>
            </inputs>    
          <execute> <![CDATA[ //RDFication
var itemresource = LD.createInstance(URI);
itemresource.addNameSpace("scom","http://sites.wiwiss.fu-berlin.de/suhl/bizer/bookmashup/simpleCommerceVocab01.rdf#");
itemresource.addProperty("rdf:type" ,"scom:Book");
itemresource.addProperty("rdfs:label", tuple.ItemAttributes.Title);
itemresource.addNameSpace("dc","http://purl.org/dc/elements/1.1/");
itemresource.addProperty("dc:date", tuple.ItemAttributes.PublicationDate);
itemresource.addProperty("dc:title", tuple.ItemAttributes.Title);
itemresource.addNameSpace("foaf","http://xmlns.com/foaf/0.1/");
itemresource.addProperty("foaf:depiction", tuple.LargeImage.URL);
itemresource.addProperty("foaf:thumbnail", tuple.SmallImage.URL);
itemresource.addProperty("dc:identifier", tuple.ItemAttributes.ISBN, encodeISBN);  
itemresource.addProperty("dc:publisher", tuple.ItemAttributes.Label);
itemresource.addProperty("dc:format", tuple.ItemAttributes.Format);
itemresource.addProperty("dc:format", tuple.ItemAttributes.Binding);
itemresource.addNameSpace("rev","http://dannyayers.com/xmlns/rev/#");
itemresource.addProperty("rev:hasReview", tuple.EditorialReviews.EditorialReview, nextReviewURI);
itemresource.addProperty ("dc:creator", tuple.ItemAttributes.Author, encodeAmazonAuthorURI);
itemresource.addProperty ("dc:creator", tuple.ItemAttributes.Creator, encodeAmazonAuthorURI);
itemresource.addNameSpace("skos","http://www.w3.org/2004/02/skos/core#");
itemresource.addProperty ("skos:subject", tuple.BrowseNodes.BrowseNode.Name, encodeSubjectUri);
itemresource.addProperty ("scom:hasOffer", tuple.Offers.Offer.OfferListing.OfferListingId,encodeOfferURI);
LD.serialize();]]>   
            </execute>
           </function>           
         <select itemPath="results.RDF" produces="XML"> <!--LOWERIGN Offer-->
              <inputs>
                <key id="URI" type="xs:string" paramType="variable" required="true"/>
                <key id="isbn" type="xs:string" paramType="variable" required="true"/>
				<key id="offerid" type="xs:string" paramType="variable" required="true"/>				
              </inputs>
            <execute><![CDATA[
LD.addVariable.offerid = offerid+"%";
LD.rdfize("select Offers.Offer from amazon.ecs where ItemId=@isbn and ResponseGroup='Large' and Offers.Offer.OfferListing.OfferListingId LIKE @offerid");]]>
             </execute>
        </select>                
         <function name="offer" ><!--LIFTING Offer-->
           <inputs>
               <pipe id="tuple" paramType="variable" type="xs:string"/>
               <key id="URI" paramType="variable" type="xs:string"  required="true"/>
            </inputs>    
          <execute> <![CDATA[ //RDFication
var itemresource = LD.createInstance(URI);
itemresource.addNameSpace("gr", "http://purl.org/goodrelations/v1#");
itemresource.addProperty("rdf:type" ,"gr:Offering");
itemresource.addProperty("gr:hasCurrencyValue", tuple.Offers.Offer.OfferListing.Price.Amount);
itemresource.addProperty("gr:hasCurrency", tuple.Offers.Offer.OfferListing.Price.CurrencyCode);
LD.serialize();]]>   
            </execute>
      </function>  
   <select itemPath="results.RDF" produces="XML"> <!--LOWERIGN Person-->
              <inputs>
                <key id="URI" type="xs:string" paramType="variable" required="true"/>
                <key id="author" type="xs:string" paramType="variable" required="true"/>				
              </inputs>
            <execute><![CDATA[
LD.rdfize("select * from amazon.ecs where Keywords=@author and ResponseGroup='Large' and ItemAttributes.Author = @author");]]>
            </execute>
      </select>       
        <function name="person" ><!--LIFTING Person-->
           <inputs>
               <pipe id="tuple" paramType="variable" type="xs:string"/>
               <key id="URI" paramType="variable" type="xs:string"  required="true"/>
            </inputs>    
          <execute> <![CDATA[ //RDFication
var itemresource = LD.createInstance(URI);
itemresource.addNameSpace("foaf","http://xmlns.com/foaf/0.1/");
itemresource.addProperty("foaf:name", tuple.ItemAttributes.Author, isOurPerson);
itemresource.addNameSpace("owl","http://www.w3.org/2002/07/owl#");
itemresource.addProperty("owl:sameAs", tuple.ItemAttributes.Author, encodeDBLPAuthorIsOurPerson);
itemresource.addNameSpace("dblp","http://sw.deri.org/~aharth/2004/07/dblp/dblp.owl");
itemresource.addProperty("dblp:Book", tuple.ItemAttributes.ISBN, encodeAmazonBookURI);
itemresource.addProperty("dblp:Book", tuple.ItemAttributes.EISBN, encodeAmazonBookURI);
itemresource.addProperty("dblp:Book", tuple.ItemAttributes.ISBN, encodeGoogleBookURI);
itemresource.addProperty("dblp:Book", tuple.ItemAttributes.EISBN, encodeGoogleBookURI);
itemresource.addProperty("dblp:Book", tuple.ASIN, encodeAmazonBookURIASIN);
LD.serialize();
            ]]>   
            </execute>
      </function>       
        <select itemPath="results.RDF" produces="XML"> <!--LOWERIGN Review-->
              <inputs>
                <key id="URI" type="xs:string" paramType="variable" required="true"/>
                <key id="isbn" type="xs:string" paramType="variable" required="true"/>
                <key id="num" type="xs:string" paramType="variable" required="true"/>
              </inputs>
            <execute><![CDATA[
LD.rdfize("select * from amazon.ecs where ItemId=@isbn and ResponseGroup='Large'");]]>
             </execute>
        </select>       
        <function name="review" ><!--LIFTING Review-->
           <inputs>
               <pipe id="tuple" paramType="variable" type="xs:string"/>
               <key id="URI" paramType="variable" type="xs:string"  required="true"/>
            </inputs>    
          <execute> <![CDATA[ //RDFication
var itemresource = LD.createInstance(URI);
itemresource.addNameSpace("rev","http://dannyayers.com/xmlns/rev/#");
itemresource.addProperty("rdf:type" ,"rev:Review");
itemresource.addProperty("rev:reviewer", tuple.EditorialReviews.EditorialReview.Source, isTheReviewSourceNum);
itemresource.addProperty("rev:text", tuple.EditorialReviews.EditorialReview.Content, isTheReviewContentNum);
LD.serialize();]]> 
            </execute>
      </function>     
    </bindings>
</table>
