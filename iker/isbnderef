<?xml version="1.0" encoding="UTF-8"?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd" https="true">
    <meta>
        <author>IKER AZPEITIA</author>
        <description>RDFIZER FOR GOOGLE.BOOKS</description>
        <documentationURL><!-- url for API documentation --></documentationURL>
        <apiKeyURL><!-- url for getting an API key if needed --></apiKeyURL>
        <sampleQuery>SELECT * FROM google.books WHERE q="isbn+006251587X" AND maxResults=3 AND startIndex=2</sampleQuery>    
    </meta>
    <!--GLOBAL FUNCTIONS-->
    <execute><![CDATA[  
y.include('https://raw.githubusercontent.com/onekin/owc/master/iker/ld.js'); // LD.js.       
	//E4X namespace
  
function composeTitle(info){
	var title = info.subtitle+info.title;
	return title;
}

function encodeSubjectUri(subject){
	var subjectUri = "http://dbpedia.org/resource/"+ encodeURIComponent(subject);
	return subjectUri;
}
         
i= 1;
function nextReviewURI(){
	var reviewURI = URI.replace("/books/","/reviews/");
    reviewURI = reviewURI+"_EditorialReview"+i; 
	i++;
	return reviewURI;
}

function encodeAuthorURI(author){
	var authorUri = URI.replace("/books/","/persons/");
	var pos = authorUri.lastIndexOf("/"); 
	authorUri = authorUri.substring(0,pos+1) + encodeURIComponent(author);
	return authorUri;
}

function encodeISBN(isbn){
	var newISBN = "urn:ISBN:"+ isbn;
	return newISBN;
}

function offerURI(id)
{
 var offerURI = URI.replace("/books/","/amazonOffer/");
  return offerURI+"/"+id;
} ]]>
    </execute> 
    <bindings>
        <!--LOWERIGN SELECTS-->
         <select itemPath="results.RDF" produces="XML"> <!--itemPath="ItemSearchResponse.Items.Item"-->
              <inputs>
                <key id="amazonbookURI" type="xs:string" paramType="variable" required="true"/>
                <key id="isbn" type="xs:string" paramType="variable" required="true"/>
                <!--<key id="environment" type="xs:string" paramType="variable" required="true"/>
                -->
               </inputs>
            <execute><![CDATA[
            /*
y.env(environment); 
y.log(environment);
*/
var variables = {};
variables.isbn= isbn;
variables.URI= amazonbookURI;
//var qu = "env '"+environment+"'; select * from amazon.ecs  where ItemId=@isbn and AssociateTag ='123' and ResponseGroup='Large' | isbnderef.amazonbook(@URI)";
var qu = " select * from amazon.ecs  where ItemId=@isbn and AssociateTag ='123' and ResponseGroup='Large' | isbnderef.amazonbook(@URI)";
y.log("ik::: "+qu);
var q = y.query(qu, variables);
var results =q.results;
response.object = XML(results);
            ]]></execute>
        </select>
         
        <!--LIFTING FUNCTIONS-->
      <function name="googleBook" >
           <inputs>
               <pipe id="tuple" paramType="variable" type="xs:string"/>
               <key id="URI" paramType="variable" type="xs:string"  required="true"/>

            </inputs>    
          <execute> <![CDATA[ //RDFication
var itemresource = LD.createInstance(URI);
itemresource.addNameSpace("scom","http://sites.wiwiss.fu-berlin.de/suhl/bizer/bookmashup/simpleCommerceVocab01.rdf#");
itemresource.addProperty("rdf:type" ,"scom:Book");
itemresource.addProperty("rdfs:label", tuple.items.volumeInfo, composeTitle);
itemresource.addNameSpace("dc","http://purl.org/dc/elements/1.1/");
itemresource.addProperty("dc:title", tuple.items.volumeInfo, composeTitle);
itemresource.addProperty ("dc:creator", items.volumeInfo.authors);
itemresource.addProperty("dc:identifier", tuple.items.volumeInfo.industryIdentifier, encodeISBN);   //SEE THIS
itemresource.addProperty("dc:publisher", tuple.items.volumeInfo.publisher);
itemresource.addProperty("dc:date", tuple.items.volumeInfo.publishedDate);
itemresource.addNameSpace("foaf","http://xmlns.com/foaf/0.1/");
itemresource.addProperty("foaf:depiction", tuple.items.volumeInfo.imageLinks.thumbnail);
itemresource.addProperty("foaf:thumbnail", tuple.items.volumeInfo.imageLinks.smallThumbnail);
itemresource.addProperty("dc:format", tuple.items.volumeInfo.printType);
itemresource.addProperty("dc:language", tuple.items.volumeInfo.language);
itemresource.addNameSpace("skos","http://www.w3.org/2004/02/skos/core#");
itemresource.addProperty ("skos:subject", tuple.BrowseNodes.BrowseNode.categories, encodeSubjectUri);
var offerUri = URI.replace("/books/","/googleOffers/");
itemresource.addProperty ("scom:hasOffer",offerUri);
/*
itemresource.addNameSpace("rev","http://dannyayers.com/xmlns/rev/#");
itemresource.addProperty("rev:hasReview", tuple.EditorialReviews.EditorialReview, nextReviewURI);
*/
response.object =LD.serialize();
            ]]>   
            </execute>
           </function>        
              
      <function name="googleOffer" >
           <inputs>
               <pipe id="tuple" paramType="variable" type="xs:string"/>
               <key id="URI" paramType="variable" type="xs:string"  required="true"/>
            </inputs>    
          <execute> <![CDATA[ //RDFication
var itemresource = LD.createInstance(URI);
itemresource.addNameSpace("gr", "http://purl.org/goodrelations/v1#");
itemresource.addProperty("rdf:type" ,"gr:Offering");
itemresource.addProperty("gr:hasCurrencyValue", tuple.items.saleInfo.retailPrice.amount);
itemresource.addProperty("gr:hasCurrency", tuple.items.saleInfo.retailPrice.currencyCode);
response.object =LD.serialize();
            ]]>   
            </execute>
           </function>
        
      <function name="amazonbook" >
           <inputs>
               <pipe id="tuple" paramType="variable" type="xs:string"/>
               <key id="URI" paramType="variable" type="xs:string"  required="true"/>
            </inputs>    
          <execute> <![CDATA[ //RDFication
default xml namespace = "http://webservices.amazon.com/AWSECommerceService/2011-08-01";
var itemresource = LD.createInstance(URI);
itemresource.addNameSpace("scom","http://sites.wiwiss.fu-berlin.de/suhl/bizer/bookmashup/simpleCommerceVocab01.rdf#");
itemresource.addProperty("rdf:type" ,"scom:Book");
itemresource.addProperty("rdfs:label", tuple.ItemAttributes.Title);
itemresource.addNameSpace("dc","http://purl.org/dc/elements/1.1/");
itemresource.addProperty("dc:date", tuple.ItemAttributes.PublicationDate);
itemresource.addProperty("dc:title", tuple.ItemAttributes.Title);
itemresource.addNameSpace("foaf","http://xmlns.com/foaf/0.1/");
itemresource.addProperty("foaf:depiction", tuple.LargeImage.URL);
itemresource.addProperty("foaf:thumbnail", tuple.SmallImage.URL);
itemresource.addProperty("dc:identifier", tuple.ItemAttributes.ISBN, encodeISBN);  
itemresource.addProperty("dc:publisher", tuple.ItemAttributes.Label);
itemresource.addProperty("dc:format", tuple.ItemAttributes.Format);
itemresource.addProperty("dc:format", tuple.ItemAttributes.Binding);
itemresource.addNameSpace("rev","http://dannyayers.com/xmlns/rev/#");
itemresource.addProperty("rev:hasReview", tuple.EditorialReviews.EditorialReview, nextReviewURI);
itemresource.addProperty ("dc:creator", tuple.ItemAttributes.Author, encodeAuthorURI);
itemresource.addProperty ("dc:creator", tuple.ItemAttributes.Creator, encodeAuthorURI);
itemresource.addNameSpace("skos","http://www.w3.org/2004/02/skos/core#");
itemresource.addProperty ("skos:subject", tuple.BrowseNodes.BrowseNode.Name, encodeSubjectUri);
itemresource.addProperty ("scom:hasOffer", tuple.Offers.Offer.OfferListing.OfferListingId,offerURI);
response.object =LD.serialize();
            ]]>   
            </execute>
           </function>
                
      <function name="amazonOffer" >
           <inputs>
               <pipe id="tuple" paramType="variable" type="xs:string"/>
               <key id="URI" paramType="variable" type="xs:string"  required="true"/>
            </inputs>    
          <execute> <![CDATA[ //RDFication
var itemresource = LD.createInstance(URI);
itemresource.addNameSpace("gr", "http://purl.org/goodrelations/v1#");
itemresource.addProperty("rdf:type" ,"gr:Offering");
itemresource.addProperty("gr:hasCurrencyValue", tuple.item.Offers.Offer.OfferListing.Price.Amount);
itemresource.addProperty("gr:hasCurrency", tuple.item.Offers.Offer.OfferListing.Price.CurrencyCode);
response.object =LD.serialize();
            ]]>   
            </execute>
           </function>        
    </bindings>
</table>
